name: BUILD RELEASE AND PUSH

on:
  push:
    tags: [ "v**" ]
  pull_request:
    tags: [ "v**" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https gnupg lsb-release software-properties-common
        curl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy
    - name: downcase REPO
      run: echo "REPO=${{github.event.repository.name}}" >>${GITHUB_ENV}
    - name: Build the Docker image
      env:
        SCW_SECRET:  ${{ secrets.SCW_SECRET }}
      run: docker login rg.fr-par.scw.cloud/namespace-great-wilson -u nologin -p "$SCW_SECRET"
    - run: docker build . --file Dockerfile --tag "rg.fr-par.scw.cloud/namespace-great-wilson/${REPO,,}:${GITHUB_REF##*/v}"
    - run: docker push "rg.fr-par.scw.cloud/namespace-great-wilson/${REPO,,}:${GITHUB_REF##*/v}"

    - name: Set Docker Image Tag
      run: echo "DOCKER_IMAGE_TAG=rg.fr-par.scw.cloud/namespace-great-wilson/${REPO,,}:${GITHUB_REF##*/v}" >> $GITHUB_ENV
    
    # - name: Run and Send Trivy to Webhook
    #   run: |
    #     trivy image --format json --output trivy-scan.json rg.fr-par.scw.cloud/namespace-great-wilson/${REPO,,}:${GITHUB_REF##*/v}

    - name: Run and Send Trivy to Webhook
      run: |
        trivy image --format json --output trivy-scan.json $DOCKER_IMAGE_TAG
        titleMsg="Vulnerability Scan Result for $DOCKER_IMAGE_TAG"
        vulnJQ=$(jq -r '.Results[] | if .Vulnerabilities then .Target + ": " + (.Vulnerabilities[] | .VulnerabilityID + " " + .Severity) else .Target + ": Aucune vulnÃ©rabilitÃ©e trouvÃ©e dans l image ! ðŸš€ðŸš€" end' trivy-scan.json)
        PAYLOAD=$(jq -n --arg title "$titleMsg" --arg text "$vulnJQ" \
          '{
            "@type": "MessageCard",
            "@context": "http://schema.org/extensions",
            "summary": $title,
            "sections": [{"activityTitle": $title, "text": $text}]
          }')
        echo "$PAYLOAD"
        curl -X POST -H "Content-Type: application/json" -d "$PAYLOAD" https://aidalinfo.webhook.office.com/webhookb2/8fbe6f13-b576-4e4a-9a41-faf383791f06@4b38adef-4ec6-49ab-a639-261c6300122b/IncomingWebhook/446a0ec1c76d419f96fbc53f945cfee1/4fddf9f5-cb9a-44c3-9b2d-bc716b0f2009/V2HSV4hF9s9y4FsLh1mZ8p8Vf1-FkmvKYuHNRDeT5UNqg1

